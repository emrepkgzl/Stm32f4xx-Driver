
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000588  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000730  08000738  00010738  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000730  08000730  00010738  2**0
                  CONTENTS
  4 .ARM          00000000  08000730  08000730  00010738  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000730  08000738  00010738  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000730  08000730  00010730  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000734  08000734  00010734  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010738  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010738  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010738  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000890  00000000  00000000  00010768  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000023e  00000000  00000000  00010ff8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b0  00000000  00000000  00011238  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000088  00000000  00000000  000112e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001380  00000000  00000000  00011370  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000c23  00000000  00000000  000126f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000529a  00000000  00000000  00013313  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000185ad  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001fc  00000000  00000000  00018600  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000718 	.word	0x08000718

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000718 	.word	0x08000718

080001e8 <main>:
 */

#include "stm32f407xx.h"

int main(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b086      	sub	sp, #24
 80001ec:	af00      	add	r7, sp, #0
	GPIO_Handle_t gpioLed, gpioButton;

	gpioLed.pGPIOx = GPIOD;
 80001ee:	4b1d      	ldr	r3, [pc, #116]	; (8000264 <main+0x7c>)
 80001f0:	60fb      	str	r3, [r7, #12]
	gpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 80001f2:	230d      	movs	r3, #13
 80001f4:	743b      	strb	r3, [r7, #16]
	gpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80001f6:	2301      	movs	r3, #1
 80001f8:	747b      	strb	r3, [r7, #17]
	gpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_MS;
 80001fa:	2301      	movs	r3, #1
 80001fc:	74bb      	strb	r3, [r7, #18]
	gpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80001fe:	2300      	movs	r3, #0
 8000200:	753b      	strb	r3, [r7, #20]
	gpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PULL_NONE;
 8000202:	2300      	movs	r3, #0
 8000204:	74fb      	strb	r3, [r7, #19]

	gpioButton.pGPIOx = GPIOA;
 8000206:	4b18      	ldr	r3, [pc, #96]	; (8000268 <main+0x80>)
 8000208:	603b      	str	r3, [r7, #0]
	gpioButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 800020a:	2300      	movs	r3, #0
 800020c:	713b      	strb	r3, [r7, #4]
	gpioButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 800020e:	2300      	movs	r3, #0
 8000210:	717b      	strb	r3, [r7, #5]
	gpioButton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_MS;
 8000212:	2301      	movs	r3, #1
 8000214:	71bb      	strb	r3, [r7, #6]
	gpioButton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PULL_NONE;
 8000216:	2300      	movs	r3, #0
 8000218:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOD, ENABLE);
 800021a:	2101      	movs	r1, #1
 800021c:	4811      	ldr	r0, [pc, #68]	; (8000264 <main+0x7c>)
 800021e:	f000 f84f 	bl	80002c0 <GPIO_PeriClockControl>
	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000222:	2101      	movs	r1, #1
 8000224:	4810      	ldr	r0, [pc, #64]	; (8000268 <main+0x80>)
 8000226:	f000 f84b 	bl	80002c0 <GPIO_PeriClockControl>
	GPIO_Init(&gpioLed);
 800022a:	f107 030c 	add.w	r3, r7, #12
 800022e:	4618      	mov	r0, r3
 8000230:	f000 f92e 	bl	8000490 <GPIO_Init>
	GPIO_Init(&gpioButton);
 8000234:	463b      	mov	r3, r7
 8000236:	4618      	mov	r0, r3
 8000238:	f000 f92a 	bl	8000490 <GPIO_Init>

	while(ENABLE)
	{
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0))
 800023c:	2100      	movs	r1, #0
 800023e:	480a      	ldr	r0, [pc, #40]	; (8000268 <main+0x80>)
 8000240:	f000 fa0a 	bl	8000658 <GPIO_ReadFromInputPin>
 8000244:	4603      	mov	r3, r0
 8000246:	2b00      	cmp	r3, #0
 8000248:	d005      	beq.n	8000256 <main+0x6e>
		{
			GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_13, ENABLE);
 800024a:	2201      	movs	r2, #1
 800024c:	210d      	movs	r1, #13
 800024e:	4805      	ldr	r0, [pc, #20]	; (8000264 <main+0x7c>)
 8000250:	f000 fa19 	bl	8000686 <GPIO_WriteToOutputPin>
 8000254:	e7f2      	b.n	800023c <main+0x54>
		}
		else
		{
			GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_13, DISABLE);
 8000256:	2200      	movs	r2, #0
 8000258:	210d      	movs	r1, #13
 800025a:	4802      	ldr	r0, [pc, #8]	; (8000264 <main+0x7c>)
 800025c:	f000 fa13 	bl	8000686 <GPIO_WriteToOutputPin>
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0))
 8000260:	e7ec      	b.n	800023c <main+0x54>
 8000262:	bf00      	nop
 8000264:	40020c00 	.word	0x40020c00
 8000268:	40020000 	.word	0x40020000

0800026c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800026c:	480d      	ldr	r0, [pc, #52]	; (80002a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800026e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000270:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000274:	480c      	ldr	r0, [pc, #48]	; (80002a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000276:	490d      	ldr	r1, [pc, #52]	; (80002ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8000278:	4a0d      	ldr	r2, [pc, #52]	; (80002b0 <LoopForever+0xe>)
  movs r3, #0
 800027a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800027c:	e002      	b.n	8000284 <LoopCopyDataInit>

0800027e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800027e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000280:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000282:	3304      	adds	r3, #4

08000284 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000284:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000286:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000288:	d3f9      	bcc.n	800027e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800028a:	4a0a      	ldr	r2, [pc, #40]	; (80002b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800028c:	4c0a      	ldr	r4, [pc, #40]	; (80002b8 <LoopForever+0x16>)
  movs r3, #0
 800028e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000290:	e001      	b.n	8000296 <LoopFillZerobss>

08000292 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000292:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000294:	3204      	adds	r2, #4

08000296 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000296:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000298:	d3fb      	bcc.n	8000292 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800029a:	f000 fa19 	bl	80006d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800029e:	f7ff ffa3 	bl	80001e8 <main>

080002a2 <LoopForever>:

LoopForever:
  b LoopForever
 80002a2:	e7fe      	b.n	80002a2 <LoopForever>
  ldr   r0, =_estack
 80002a4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002ac:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b0:	08000738 	.word	0x08000738
  ldr r2, =_sbss
 80002b4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002b8:	2000001c 	.word	0x2000001c

080002bc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002bc:	e7fe      	b.n	80002bc <ADC_IRQHandler>
	...

080002c0 <GPIO_PeriClockControl>:
 * 		@note	:	none
 * 		@date	:	07.19.23
 *
 **********************************************************************/
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002c0:	b480      	push	{r7}
 80002c2:	b083      	sub	sp, #12
 80002c4:	af00      	add	r7, sp, #0
 80002c6:	6078      	str	r0, [r7, #4]
 80002c8:	460b      	mov	r3, r1
 80002ca:	70fb      	strb	r3, [r7, #3]
	if(EnorDi)
 80002cc:	78fb      	ldrb	r3, [r7, #3]
 80002ce:	2b00      	cmp	r3, #0
 80002d0:	d062      	beq.n	8000398 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	4a64      	ldr	r2, [pc, #400]	; (8000468 <GPIO_PeriClockControl+0x1a8>)
 80002d6:	4293      	cmp	r3, r2
 80002d8:	d106      	bne.n	80002e8 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002da:	4b64      	ldr	r3, [pc, #400]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80002dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002de:	4a63      	ldr	r2, [pc, #396]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80002e0:	f043 0301 	orr.w	r3, r3, #1
 80002e4:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOI)
		{
			GPIOI_PCLK_DI();
		}
	}
}
 80002e6:	e0b9      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB)
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	4a61      	ldr	r2, [pc, #388]	; (8000470 <GPIO_PeriClockControl+0x1b0>)
 80002ec:	4293      	cmp	r3, r2
 80002ee:	d106      	bne.n	80002fe <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002f0:	4b5e      	ldr	r3, [pc, #376]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80002f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f4:	4a5d      	ldr	r2, [pc, #372]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80002f6:	f043 0302 	orr.w	r3, r3, #2
 80002fa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002fc:	e0ae      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOC)
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	4a5c      	ldr	r2, [pc, #368]	; (8000474 <GPIO_PeriClockControl+0x1b4>)
 8000302:	4293      	cmp	r3, r2
 8000304:	d106      	bne.n	8000314 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000306:	4b59      	ldr	r3, [pc, #356]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000308:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030a:	4a58      	ldr	r2, [pc, #352]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 800030c:	f043 0304 	orr.w	r3, r3, #4
 8000310:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000312:	e0a3      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOD)
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	4a58      	ldr	r2, [pc, #352]	; (8000478 <GPIO_PeriClockControl+0x1b8>)
 8000318:	4293      	cmp	r3, r2
 800031a:	d106      	bne.n	800032a <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 800031c:	4b53      	ldr	r3, [pc, #332]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 800031e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000320:	4a52      	ldr	r2, [pc, #328]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000322:	f043 0308 	orr.w	r3, r3, #8
 8000326:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000328:	e098      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOE)
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a53      	ldr	r2, [pc, #332]	; (800047c <GPIO_PeriClockControl+0x1bc>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d106      	bne.n	8000340 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000332:	4b4e      	ldr	r3, [pc, #312]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000334:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000336:	4a4d      	ldr	r2, [pc, #308]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000338:	f043 0310 	orr.w	r3, r3, #16
 800033c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800033e:	e08d      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOF)
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	4a4f      	ldr	r2, [pc, #316]	; (8000480 <GPIO_PeriClockControl+0x1c0>)
 8000344:	4293      	cmp	r3, r2
 8000346:	d106      	bne.n	8000356 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000348:	4b48      	ldr	r3, [pc, #288]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034c:	4a47      	ldr	r2, [pc, #284]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 800034e:	f043 0320 	orr.w	r3, r3, #32
 8000352:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000354:	e082      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOG)
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	4a4a      	ldr	r2, [pc, #296]	; (8000484 <GPIO_PeriClockControl+0x1c4>)
 800035a:	4293      	cmp	r3, r2
 800035c:	d106      	bne.n	800036c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800035e:	4b43      	ldr	r3, [pc, #268]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000362:	4a42      	ldr	r2, [pc, #264]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000364:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000368:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036a:	e077      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOH)
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	4a46      	ldr	r2, [pc, #280]	; (8000488 <GPIO_PeriClockControl+0x1c8>)
 8000370:	4293      	cmp	r3, r2
 8000372:	d106      	bne.n	8000382 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000374:	4b3d      	ldr	r3, [pc, #244]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000376:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000378:	4a3c      	ldr	r2, [pc, #240]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 800037a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800037e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000380:	e06c      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOI)
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4a41      	ldr	r2, [pc, #260]	; (800048c <GPIO_PeriClockControl+0x1cc>)
 8000386:	4293      	cmp	r3, r2
 8000388:	d168      	bne.n	800045c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 800038a:	4b38      	ldr	r3, [pc, #224]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 800038c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038e:	4a37      	ldr	r2, [pc, #220]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000390:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000394:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000396:	e061      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	4a33      	ldr	r2, [pc, #204]	; (8000468 <GPIO_PeriClockControl+0x1a8>)
 800039c:	4293      	cmp	r3, r2
 800039e:	d106      	bne.n	80003ae <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 80003a0:	4b32      	ldr	r3, [pc, #200]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a4:	4a31      	ldr	r2, [pc, #196]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003a6:	f023 0301 	bic.w	r3, r3, #1
 80003aa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ac:	e056      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB)
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	4a2f      	ldr	r2, [pc, #188]	; (8000470 <GPIO_PeriClockControl+0x1b0>)
 80003b2:	4293      	cmp	r3, r2
 80003b4:	d106      	bne.n	80003c4 <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 80003b6:	4b2d      	ldr	r3, [pc, #180]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ba:	4a2c      	ldr	r2, [pc, #176]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003bc:	f023 0302 	bic.w	r3, r3, #2
 80003c0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c2:	e04b      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOC)
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	4a2b      	ldr	r2, [pc, #172]	; (8000474 <GPIO_PeriClockControl+0x1b4>)
 80003c8:	4293      	cmp	r3, r2
 80003ca:	d106      	bne.n	80003da <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 80003cc:	4b27      	ldr	r3, [pc, #156]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d0:	4a26      	ldr	r2, [pc, #152]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003d2:	f023 0304 	bic.w	r3, r3, #4
 80003d6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d8:	e040      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOD)
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	4a26      	ldr	r2, [pc, #152]	; (8000478 <GPIO_PeriClockControl+0x1b8>)
 80003de:	4293      	cmp	r3, r2
 80003e0:	d106      	bne.n	80003f0 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 80003e2:	4b22      	ldr	r3, [pc, #136]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e6:	4a21      	ldr	r2, [pc, #132]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003e8:	f023 0308 	bic.w	r3, r3, #8
 80003ec:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ee:	e035      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOE)
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	4a22      	ldr	r2, [pc, #136]	; (800047c <GPIO_PeriClockControl+0x1bc>)
 80003f4:	4293      	cmp	r3, r2
 80003f6:	d106      	bne.n	8000406 <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 80003f8:	4b1c      	ldr	r3, [pc, #112]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003fc:	4a1b      	ldr	r2, [pc, #108]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003fe:	f023 0310 	bic.w	r3, r3, #16
 8000402:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000404:	e02a      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOF)
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	4a1d      	ldr	r2, [pc, #116]	; (8000480 <GPIO_PeriClockControl+0x1c0>)
 800040a:	4293      	cmp	r3, r2
 800040c:	d106      	bne.n	800041c <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 800040e:	4b17      	ldr	r3, [pc, #92]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000410:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000412:	4a16      	ldr	r2, [pc, #88]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000414:	f023 0320 	bic.w	r3, r3, #32
 8000418:	6313      	str	r3, [r2, #48]	; 0x30
}
 800041a:	e01f      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOG)
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	4a19      	ldr	r2, [pc, #100]	; (8000484 <GPIO_PeriClockControl+0x1c4>)
 8000420:	4293      	cmp	r3, r2
 8000422:	d106      	bne.n	8000432 <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 8000424:	4b11      	ldr	r3, [pc, #68]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000426:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000428:	4a10      	ldr	r2, [pc, #64]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 800042a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800042e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000430:	e014      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOH)
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	4a14      	ldr	r2, [pc, #80]	; (8000488 <GPIO_PeriClockControl+0x1c8>)
 8000436:	4293      	cmp	r3, r2
 8000438:	d106      	bne.n	8000448 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 800043a:	4b0c      	ldr	r3, [pc, #48]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 800043c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800043e:	4a0b      	ldr	r2, [pc, #44]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000440:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000444:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000446:	e009      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOI)
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	4a10      	ldr	r2, [pc, #64]	; (800048c <GPIO_PeriClockControl+0x1cc>)
 800044c:	4293      	cmp	r3, r2
 800044e:	d105      	bne.n	800045c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000450:	4b06      	ldr	r3, [pc, #24]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000452:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000454:	4a05      	ldr	r2, [pc, #20]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000456:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800045a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800045c:	bf00      	nop
 800045e:	370c      	adds	r7, #12
 8000460:	46bd      	mov	sp, r7
 8000462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000466:	4770      	bx	lr
 8000468:	40020000 	.word	0x40020000
 800046c:	40023800 	.word	0x40023800
 8000470:	40020400 	.word	0x40020400
 8000474:	40020800 	.word	0x40020800
 8000478:	40020c00 	.word	0x40020c00
 800047c:	40021000 	.word	0x40021000
 8000480:	40021400 	.word	0x40021400
 8000484:	40021800 	.word	0x40021800
 8000488:	40021c00 	.word	0x40021c00
 800048c:	40022000 	.word	0x40022000

08000490 <GPIO_Init>:
 * 		@note	:	none
 * 		@date	:	07.19.23
 *
 **********************************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000490:	b480      	push	{r7}
 8000492:	b085      	sub	sp, #20
 8000494:	af00      	add	r7, sp, #0
 8000496:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 8000498:	2300      	movs	r3, #0
 800049a:	60fb      	str	r3, [r7, #12]
	/* 1. configure the mode of GPIO pin */
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	795b      	ldrb	r3, [r3, #5]
 80004a0:	2b03      	cmp	r3, #3
 80004a2:	d81f      	bhi.n	80004e4 <GPIO_Init+0x54>
	{
		/* non interrupt mode */
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	795b      	ldrb	r3, [r3, #5]
 80004a8:	461a      	mov	r2, r3
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	791b      	ldrb	r3, [r3, #4]
 80004ae:	005b      	lsls	r3, r3, #1
 80004b0:	fa02 f303 	lsl.w	r3, r2, r3
 80004b4:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	681b      	ldr	r3, [r3, #0]
 80004ba:	681a      	ldr	r2, [r3, #0]
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	791b      	ldrb	r3, [r3, #4]
 80004c0:	005b      	lsls	r3, r3, #1
 80004c2:	2103      	movs	r1, #3
 80004c4:	fa01 f303 	lsl.w	r3, r1, r3
 80004c8:	43db      	mvns	r3, r3
 80004ca:	4619      	mov	r1, r3
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	400a      	ands	r2, r1
 80004d2:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	6819      	ldr	r1, [r3, #0]
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	681b      	ldr	r3, [r3, #0]
 80004de:	68fa      	ldr	r2, [r7, #12]
 80004e0:	430a      	orrs	r2, r1
 80004e2:	601a      	str	r2, [r3, #0]
	else
	{
		/* interrupt mode */
		//TODO
	}
	temp = 0;
 80004e4:	2300      	movs	r3, #0
 80004e6:	60fb      	str	r3, [r7, #12]

	/* 2. configure the speed of GPIO pin */
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	799b      	ldrb	r3, [r3, #6]
 80004ec:	461a      	mov	r2, r3
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	791b      	ldrb	r3, [r3, #4]
 80004f2:	005b      	lsls	r3, r3, #1
 80004f4:	fa02 f303 	lsl.w	r3, r2, r3
 80004f8:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	681b      	ldr	r3, [r3, #0]
 80004fe:	689a      	ldr	r2, [r3, #8]
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	791b      	ldrb	r3, [r3, #4]
 8000504:	005b      	lsls	r3, r3, #1
 8000506:	2103      	movs	r1, #3
 8000508:	fa01 f303 	lsl.w	r3, r1, r3
 800050c:	43db      	mvns	r3, r3
 800050e:	4619      	mov	r1, r3
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	400a      	ands	r2, r1
 8000516:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	6899      	ldr	r1, [r3, #8]
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	68fa      	ldr	r2, [r7, #12]
 8000524:	430a      	orrs	r2, r1
 8000526:	609a      	str	r2, [r3, #8]
	temp = 0;
 8000528:	2300      	movs	r3, #0
 800052a:	60fb      	str	r3, [r7, #12]

	/* 3. configure the pull up/down state */
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	79db      	ldrb	r3, [r3, #7]
 8000530:	461a      	mov	r2, r3
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	791b      	ldrb	r3, [r3, #4]
 8000536:	005b      	lsls	r3, r3, #1
 8000538:	fa02 f303 	lsl.w	r3, r2, r3
 800053c:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	681b      	ldr	r3, [r3, #0]
 8000542:	68da      	ldr	r2, [r3, #12]
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	791b      	ldrb	r3, [r3, #4]
 8000548:	005b      	lsls	r3, r3, #1
 800054a:	2103      	movs	r1, #3
 800054c:	fa01 f303 	lsl.w	r3, r1, r3
 8000550:	43db      	mvns	r3, r3
 8000552:	4619      	mov	r1, r3
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	681b      	ldr	r3, [r3, #0]
 8000558:	400a      	ands	r2, r1
 800055a:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	681b      	ldr	r3, [r3, #0]
 8000560:	68d9      	ldr	r1, [r3, #12]
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	68fa      	ldr	r2, [r7, #12]
 8000568:	430a      	orrs	r2, r1
 800056a:	60da      	str	r2, [r3, #12]
	temp = 0;
 800056c:	2300      	movs	r3, #0
 800056e:	60fb      	str	r3, [r7, #12]

	/* 4. configure the output type */
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	7a1b      	ldrb	r3, [r3, #8]
 8000574:	461a      	mov	r2, r3
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	791b      	ldrb	r3, [r3, #4]
 800057a:	fa02 f303 	lsl.w	r3, r2, r3
 800057e:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	681b      	ldr	r3, [r3, #0]
 8000584:	685a      	ldr	r2, [r3, #4]
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	791b      	ldrb	r3, [r3, #4]
 800058a:	4619      	mov	r1, r3
 800058c:	2301      	movs	r3, #1
 800058e:	408b      	lsls	r3, r1
 8000590:	43db      	mvns	r3, r3
 8000592:	4619      	mov	r1, r3
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	681b      	ldr	r3, [r3, #0]
 8000598:	400a      	ands	r2, r1
 800059a:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	6859      	ldr	r1, [r3, #4]
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	681b      	ldr	r3, [r3, #0]
 80005a6:	68fa      	ldr	r2, [r7, #12]
 80005a8:	430a      	orrs	r2, r1
 80005aa:	605a      	str	r2, [r3, #4]
	temp = 0;
 80005ac:	2300      	movs	r3, #0
 80005ae:	60fb      	str	r3, [r7, #12]

	/* 5. configure the alternate functionality */
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	795b      	ldrb	r3, [r3, #5]
 80005b4:	2b02      	cmp	r3, #2
 80005b6:	d149      	bne.n	800064c <GPIO_Init+0x1bc>
	{
		if((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) < GPIO_PIN_NO_8)
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	791b      	ldrb	r3, [r3, #4]
 80005bc:	2b07      	cmp	r3, #7
 80005be:	d81f      	bhi.n	8000600 <GPIO_Init+0x170>
		{
			temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	7a5b      	ldrb	r3, [r3, #9]
 80005c4:	461a      	mov	r2, r3
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	791b      	ldrb	r3, [r3, #4]
 80005ca:	009b      	lsls	r3, r3, #2
 80005cc:	fa02 f303 	lsl.w	r3, r2, r3
 80005d0:	60fb      	str	r3, [r7, #12]
			pGPIOHandle->pGPIOx->AFRL &= ~(0xF<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	6a1a      	ldr	r2, [r3, #32]
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	791b      	ldrb	r3, [r3, #4]
 80005dc:	4619      	mov	r1, r3
 80005de:	230f      	movs	r3, #15
 80005e0:	408b      	lsls	r3, r1
 80005e2:	43db      	mvns	r3, r3
 80005e4:	4619      	mov	r1, r3
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	400a      	ands	r2, r1
 80005ec:	621a      	str	r2, [r3, #32]
			pGPIOHandle->pGPIOx->AFRL |= temp;
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	6a19      	ldr	r1, [r3, #32]
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	68fa      	ldr	r2, [r7, #12]
 80005fa:	430a      	orrs	r2, r1
 80005fc:	621a      	str	r2, [r3, #32]
 80005fe:	e023      	b.n	8000648 <GPIO_Init+0x1b8>
		}
		else
		{
			temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % GPIO_PIN_NO_8)));
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	7a5b      	ldrb	r3, [r3, #9]
 8000604:	461a      	mov	r2, r3
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	791b      	ldrb	r3, [r3, #4]
 800060a:	f003 0307 	and.w	r3, r3, #7
 800060e:	009b      	lsls	r3, r3, #2
 8000610:	fa02 f303 	lsl.w	r3, r2, r3
 8000614:	60fb      	str	r3, [r7, #12]
			pGPIOHandle->pGPIOx->AFRH &= ~(0xF << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % GPIO_PIN_NO_8)));
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	681b      	ldr	r3, [r3, #0]
 800061a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	791b      	ldrb	r3, [r3, #4]
 8000620:	f003 0307 	and.w	r3, r3, #7
 8000624:	009b      	lsls	r3, r3, #2
 8000626:	210f      	movs	r1, #15
 8000628:	fa01 f303 	lsl.w	r3, r1, r3
 800062c:	43db      	mvns	r3, r3
 800062e:	4619      	mov	r1, r3
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	681b      	ldr	r3, [r3, #0]
 8000634:	400a      	ands	r2, r1
 8000636:	625a      	str	r2, [r3, #36]	; 0x24
			pGPIOHandle->pGPIOx->AFRH |= temp;
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800063e:	687b      	ldr	r3, [r7, #4]
 8000640:	681b      	ldr	r3, [r3, #0]
 8000642:	68fa      	ldr	r2, [r7, #12]
 8000644:	430a      	orrs	r2, r1
 8000646:	625a      	str	r2, [r3, #36]	; 0x24
		}
		temp = 0;
 8000648:	2300      	movs	r3, #0
 800064a:	60fb      	str	r3, [r7, #12]
	}
}
 800064c:	bf00      	nop
 800064e:	3714      	adds	r7, #20
 8000650:	46bd      	mov	sp, r7
 8000652:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000656:	4770      	bx	lr

08000658 <GPIO_ReadFromInputPin>:
 * 		@note	:	none
 * 		@date	:	07.19.23
 *
 **********************************************************************/
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000658:	b480      	push	{r7}
 800065a:	b085      	sub	sp, #20
 800065c:	af00      	add	r7, sp, #0
 800065e:	6078      	str	r0, [r7, #4]
 8000660:	460b      	mov	r3, r1
 8000662:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	/* correction may be required */
	value = (uint8_t)(pGPIOx->IDR & (1 << PinNumber));
 8000664:	687b      	ldr	r3, [r7, #4]
 8000666:	691b      	ldr	r3, [r3, #16]
 8000668:	b2da      	uxtb	r2, r3
 800066a:	78fb      	ldrb	r3, [r7, #3]
 800066c:	2101      	movs	r1, #1
 800066e:	fa01 f303 	lsl.w	r3, r1, r3
 8000672:	b2db      	uxtb	r3, r3
 8000674:	4013      	ands	r3, r2
 8000676:	73fb      	strb	r3, [r7, #15]
	return value;
 8000678:	7bfb      	ldrb	r3, [r7, #15]
}
 800067a:	4618      	mov	r0, r3
 800067c:	3714      	adds	r7, #20
 800067e:	46bd      	mov	sp, r7
 8000680:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000684:	4770      	bx	lr

08000686 <GPIO_WriteToOutputPin>:
 * 		@note	:	none
 * 		@date	:	07.19.23
 *
 **********************************************************************/
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t EnorDi)
{
 8000686:	b480      	push	{r7}
 8000688:	b083      	sub	sp, #12
 800068a:	af00      	add	r7, sp, #0
 800068c:	6078      	str	r0, [r7, #4]
 800068e:	460b      	mov	r3, r1
 8000690:	70fb      	strb	r3, [r7, #3]
 8000692:	4613      	mov	r3, r2
 8000694:	70bb      	strb	r3, [r7, #2]
	if(EnorDi)
 8000696:	78bb      	ldrb	r3, [r7, #2]
 8000698:	2b00      	cmp	r3, #0
 800069a:	d009      	beq.n	80006b0 <GPIO_WriteToOutputPin+0x2a>
	{
		/* write 1 to the output data register */
		pGPIOx->ODR |= (1 << PinNumber);
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	695b      	ldr	r3, [r3, #20]
 80006a0:	78fa      	ldrb	r2, [r7, #3]
 80006a2:	2101      	movs	r1, #1
 80006a4:	fa01 f202 	lsl.w	r2, r1, r2
 80006a8:	431a      	orrs	r2, r3
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	615a      	str	r2, [r3, #20]
	else
	{
		/* clear the output data register */
		pGPIOx->ODR &= ~(1 << PinNumber);
	}
}
 80006ae:	e009      	b.n	80006c4 <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~(1 << PinNumber);
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	695b      	ldr	r3, [r3, #20]
 80006b4:	78fa      	ldrb	r2, [r7, #3]
 80006b6:	2101      	movs	r1, #1
 80006b8:	fa01 f202 	lsl.w	r2, r1, r2
 80006bc:	43d2      	mvns	r2, r2
 80006be:	401a      	ands	r2, r3
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	615a      	str	r2, [r3, #20]
}
 80006c4:	bf00      	nop
 80006c6:	370c      	adds	r7, #12
 80006c8:	46bd      	mov	sp, r7
 80006ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006ce:	4770      	bx	lr

080006d0 <__libc_init_array>:
 80006d0:	b570      	push	{r4, r5, r6, lr}
 80006d2:	4d0d      	ldr	r5, [pc, #52]	; (8000708 <__libc_init_array+0x38>)
 80006d4:	4c0d      	ldr	r4, [pc, #52]	; (800070c <__libc_init_array+0x3c>)
 80006d6:	1b64      	subs	r4, r4, r5
 80006d8:	10a4      	asrs	r4, r4, #2
 80006da:	2600      	movs	r6, #0
 80006dc:	42a6      	cmp	r6, r4
 80006de:	d109      	bne.n	80006f4 <__libc_init_array+0x24>
 80006e0:	4d0b      	ldr	r5, [pc, #44]	; (8000710 <__libc_init_array+0x40>)
 80006e2:	4c0c      	ldr	r4, [pc, #48]	; (8000714 <__libc_init_array+0x44>)
 80006e4:	f000 f818 	bl	8000718 <_init>
 80006e8:	1b64      	subs	r4, r4, r5
 80006ea:	10a4      	asrs	r4, r4, #2
 80006ec:	2600      	movs	r6, #0
 80006ee:	42a6      	cmp	r6, r4
 80006f0:	d105      	bne.n	80006fe <__libc_init_array+0x2e>
 80006f2:	bd70      	pop	{r4, r5, r6, pc}
 80006f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80006f8:	4798      	blx	r3
 80006fa:	3601      	adds	r6, #1
 80006fc:	e7ee      	b.n	80006dc <__libc_init_array+0xc>
 80006fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8000702:	4798      	blx	r3
 8000704:	3601      	adds	r6, #1
 8000706:	e7f2      	b.n	80006ee <__libc_init_array+0x1e>
 8000708:	08000730 	.word	0x08000730
 800070c:	08000730 	.word	0x08000730
 8000710:	08000730 	.word	0x08000730
 8000714:	08000734 	.word	0x08000734

08000718 <_init>:
 8000718:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800071a:	bf00      	nop
 800071c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800071e:	bc08      	pop	{r3}
 8000720:	469e      	mov	lr, r3
 8000722:	4770      	bx	lr

08000724 <_fini>:
 8000724:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000726:	bf00      	nop
 8000728:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800072a:	bc08      	pop	{r3}
 800072c:	469e      	mov	lr, r3
 800072e:	4770      	bx	lr
