
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000072c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080008d4  080008dc  000108dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080008d4  080008d4  000108dc  2**0
                  CONTENTS
  4 .ARM          00000000  080008d4  080008d4  000108dc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080008d4  080008dc  000108dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080008d4  080008d4  000108d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080008d8  080008d8  000108d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000108dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000108dc  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000108dc  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009fd  00000000  00000000  0001090c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000023b  00000000  00000000  00011309  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b8  00000000  00000000  00011548  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000090  00000000  00000000  00011600  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000013fc  00000000  00000000  00011690  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000dd8  00000000  00000000  00012a8c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000055ec  00000000  00000000  00013864  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  00018e50  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000224  00000000  00000000  00018ea0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080008bc 	.word	0x080008bc

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080008bc 	.word	0x080008bc

080001e8 <main>:
 */

#include "stm32f407xx.h"

int main(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b086      	sub	sp, #24
 80001ec:	af00      	add	r7, sp, #0
	GPIO_Handle_t gpioLed, gpioButton;

	gpioLed.pGPIOx = GPIOD;
 80001ee:	4b1d      	ldr	r3, [pc, #116]	; (8000264 <main+0x7c>)
 80001f0:	60fb      	str	r3, [r7, #12]
	gpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 80001f2:	230d      	movs	r3, #13
 80001f4:	743b      	strb	r3, [r7, #16]
	gpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80001f6:	2301      	movs	r3, #1
 80001f8:	747b      	strb	r3, [r7, #17]
	gpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_MS;
 80001fa:	2301      	movs	r3, #1
 80001fc:	74bb      	strb	r3, [r7, #18]
	gpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80001fe:	2300      	movs	r3, #0
 8000200:	753b      	strb	r3, [r7, #20]
	gpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PULL_NONE;
 8000202:	2300      	movs	r3, #0
 8000204:	74fb      	strb	r3, [r7, #19]

	gpioButton.pGPIOx = GPIOA;
 8000206:	4b18      	ldr	r3, [pc, #96]	; (8000268 <main+0x80>)
 8000208:	603b      	str	r3, [r7, #0]
	gpioButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 800020a:	2300      	movs	r3, #0
 800020c:	713b      	strb	r3, [r7, #4]
	gpioButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 800020e:	2300      	movs	r3, #0
 8000210:	717b      	strb	r3, [r7, #5]
	gpioButton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_MS;
 8000212:	2301      	movs	r3, #1
 8000214:	71bb      	strb	r3, [r7, #6]
	gpioButton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PULL_NONE;
 8000216:	2300      	movs	r3, #0
 8000218:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOD, ENABLE);
 800021a:	2101      	movs	r1, #1
 800021c:	4811      	ldr	r0, [pc, #68]	; (8000264 <main+0x7c>)
 800021e:	f000 f84f 	bl	80002c0 <GPIO_PeriClockControl>
	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000222:	2101      	movs	r1, #1
 8000224:	4810      	ldr	r0, [pc, #64]	; (8000268 <main+0x80>)
 8000226:	f000 f84b 	bl	80002c0 <GPIO_PeriClockControl>
	GPIO_Init(&gpioLed);
 800022a:	f107 030c 	add.w	r3, r7, #12
 800022e:	4618      	mov	r0, r3
 8000230:	f000 f92e 	bl	8000490 <GPIO_Init>
	GPIO_Init(&gpioButton);
 8000234:	463b      	mov	r3, r7
 8000236:	4618      	mov	r0, r3
 8000238:	f000 f92a 	bl	8000490 <GPIO_Init>

	while(ENABLE)
	{
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0))
 800023c:	2100      	movs	r1, #0
 800023e:	480a      	ldr	r0, [pc, #40]	; (8000268 <main+0x80>)
 8000240:	f000 fadc 	bl	80007fc <GPIO_ReadFromInputPin>
 8000244:	4603      	mov	r3, r0
 8000246:	2b00      	cmp	r3, #0
 8000248:	d005      	beq.n	8000256 <main+0x6e>
		{
			GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_13, ENABLE);
 800024a:	2201      	movs	r2, #1
 800024c:	210d      	movs	r1, #13
 800024e:	4805      	ldr	r0, [pc, #20]	; (8000264 <main+0x7c>)
 8000250:	f000 faeb 	bl	800082a <GPIO_WriteToOutputPin>
 8000254:	e7f2      	b.n	800023c <main+0x54>
		}
		else
		{
			GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_13, DISABLE);
 8000256:	2200      	movs	r2, #0
 8000258:	210d      	movs	r1, #13
 800025a:	4802      	ldr	r0, [pc, #8]	; (8000264 <main+0x7c>)
 800025c:	f000 fae5 	bl	800082a <GPIO_WriteToOutputPin>
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0))
 8000260:	e7ec      	b.n	800023c <main+0x54>
 8000262:	bf00      	nop
 8000264:	40020c00 	.word	0x40020c00
 8000268:	40020000 	.word	0x40020000

0800026c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800026c:	480d      	ldr	r0, [pc, #52]	; (80002a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800026e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000270:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000274:	480c      	ldr	r0, [pc, #48]	; (80002a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000276:	490d      	ldr	r1, [pc, #52]	; (80002ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8000278:	4a0d      	ldr	r2, [pc, #52]	; (80002b0 <LoopForever+0xe>)
  movs r3, #0
 800027a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800027c:	e002      	b.n	8000284 <LoopCopyDataInit>

0800027e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800027e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000280:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000282:	3304      	adds	r3, #4

08000284 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000284:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000286:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000288:	d3f9      	bcc.n	800027e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800028a:	4a0a      	ldr	r2, [pc, #40]	; (80002b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800028c:	4c0a      	ldr	r4, [pc, #40]	; (80002b8 <LoopForever+0x16>)
  movs r3, #0
 800028e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000290:	e001      	b.n	8000296 <LoopFillZerobss>

08000292 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000292:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000294:	3204      	adds	r2, #4

08000296 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000296:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000298:	d3fb      	bcc.n	8000292 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800029a:	f000 faeb 	bl	8000874 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800029e:	f7ff ffa3 	bl	80001e8 <main>

080002a2 <LoopForever>:

LoopForever:
  b LoopForever
 80002a2:	e7fe      	b.n	80002a2 <LoopForever>
  ldr   r0, =_estack
 80002a4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002ac:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b0:	080008dc 	.word	0x080008dc
  ldr r2, =_sbss
 80002b4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002b8:	2000001c 	.word	0x2000001c

080002bc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002bc:	e7fe      	b.n	80002bc <ADC_IRQHandler>
	...

080002c0 <GPIO_PeriClockControl>:
 * 		@note	:	none
 * 		@date	:	07.19.23
 *
 **********************************************************************/
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002c0:	b480      	push	{r7}
 80002c2:	b083      	sub	sp, #12
 80002c4:	af00      	add	r7, sp, #0
 80002c6:	6078      	str	r0, [r7, #4]
 80002c8:	460b      	mov	r3, r1
 80002ca:	70fb      	strb	r3, [r7, #3]
	if(EnorDi)
 80002cc:	78fb      	ldrb	r3, [r7, #3]
 80002ce:	2b00      	cmp	r3, #0
 80002d0:	d062      	beq.n	8000398 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	4a64      	ldr	r2, [pc, #400]	; (8000468 <GPIO_PeriClockControl+0x1a8>)
 80002d6:	4293      	cmp	r3, r2
 80002d8:	d106      	bne.n	80002e8 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002da:	4b64      	ldr	r3, [pc, #400]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80002dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002de:	4a63      	ldr	r2, [pc, #396]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80002e0:	f043 0301 	orr.w	r3, r3, #1
 80002e4:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOI)
		{
			GPIOI_PCLK_DI();
		}
	}
}
 80002e6:	e0b9      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB)
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	4a61      	ldr	r2, [pc, #388]	; (8000470 <GPIO_PeriClockControl+0x1b0>)
 80002ec:	4293      	cmp	r3, r2
 80002ee:	d106      	bne.n	80002fe <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002f0:	4b5e      	ldr	r3, [pc, #376]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80002f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f4:	4a5d      	ldr	r2, [pc, #372]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80002f6:	f043 0302 	orr.w	r3, r3, #2
 80002fa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002fc:	e0ae      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOC)
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	4a5c      	ldr	r2, [pc, #368]	; (8000474 <GPIO_PeriClockControl+0x1b4>)
 8000302:	4293      	cmp	r3, r2
 8000304:	d106      	bne.n	8000314 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000306:	4b59      	ldr	r3, [pc, #356]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000308:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030a:	4a58      	ldr	r2, [pc, #352]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 800030c:	f043 0304 	orr.w	r3, r3, #4
 8000310:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000312:	e0a3      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOD)
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	4a58      	ldr	r2, [pc, #352]	; (8000478 <GPIO_PeriClockControl+0x1b8>)
 8000318:	4293      	cmp	r3, r2
 800031a:	d106      	bne.n	800032a <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 800031c:	4b53      	ldr	r3, [pc, #332]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 800031e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000320:	4a52      	ldr	r2, [pc, #328]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000322:	f043 0308 	orr.w	r3, r3, #8
 8000326:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000328:	e098      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOE)
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a53      	ldr	r2, [pc, #332]	; (800047c <GPIO_PeriClockControl+0x1bc>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d106      	bne.n	8000340 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000332:	4b4e      	ldr	r3, [pc, #312]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000334:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000336:	4a4d      	ldr	r2, [pc, #308]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000338:	f043 0310 	orr.w	r3, r3, #16
 800033c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800033e:	e08d      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOF)
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	4a4f      	ldr	r2, [pc, #316]	; (8000480 <GPIO_PeriClockControl+0x1c0>)
 8000344:	4293      	cmp	r3, r2
 8000346:	d106      	bne.n	8000356 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000348:	4b48      	ldr	r3, [pc, #288]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034c:	4a47      	ldr	r2, [pc, #284]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 800034e:	f043 0320 	orr.w	r3, r3, #32
 8000352:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000354:	e082      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOG)
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	4a4a      	ldr	r2, [pc, #296]	; (8000484 <GPIO_PeriClockControl+0x1c4>)
 800035a:	4293      	cmp	r3, r2
 800035c:	d106      	bne.n	800036c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800035e:	4b43      	ldr	r3, [pc, #268]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000362:	4a42      	ldr	r2, [pc, #264]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000364:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000368:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036a:	e077      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOH)
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	4a46      	ldr	r2, [pc, #280]	; (8000488 <GPIO_PeriClockControl+0x1c8>)
 8000370:	4293      	cmp	r3, r2
 8000372:	d106      	bne.n	8000382 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000374:	4b3d      	ldr	r3, [pc, #244]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000376:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000378:	4a3c      	ldr	r2, [pc, #240]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 800037a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800037e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000380:	e06c      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOI)
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4a41      	ldr	r2, [pc, #260]	; (800048c <GPIO_PeriClockControl+0x1cc>)
 8000386:	4293      	cmp	r3, r2
 8000388:	d168      	bne.n	800045c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 800038a:	4b38      	ldr	r3, [pc, #224]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 800038c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038e:	4a37      	ldr	r2, [pc, #220]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000390:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000394:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000396:	e061      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	4a33      	ldr	r2, [pc, #204]	; (8000468 <GPIO_PeriClockControl+0x1a8>)
 800039c:	4293      	cmp	r3, r2
 800039e:	d106      	bne.n	80003ae <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 80003a0:	4b32      	ldr	r3, [pc, #200]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a4:	4a31      	ldr	r2, [pc, #196]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003a6:	f023 0301 	bic.w	r3, r3, #1
 80003aa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ac:	e056      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB)
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	4a2f      	ldr	r2, [pc, #188]	; (8000470 <GPIO_PeriClockControl+0x1b0>)
 80003b2:	4293      	cmp	r3, r2
 80003b4:	d106      	bne.n	80003c4 <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 80003b6:	4b2d      	ldr	r3, [pc, #180]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ba:	4a2c      	ldr	r2, [pc, #176]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003bc:	f023 0302 	bic.w	r3, r3, #2
 80003c0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c2:	e04b      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOC)
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	4a2b      	ldr	r2, [pc, #172]	; (8000474 <GPIO_PeriClockControl+0x1b4>)
 80003c8:	4293      	cmp	r3, r2
 80003ca:	d106      	bne.n	80003da <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 80003cc:	4b27      	ldr	r3, [pc, #156]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d0:	4a26      	ldr	r2, [pc, #152]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003d2:	f023 0304 	bic.w	r3, r3, #4
 80003d6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d8:	e040      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOD)
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	4a26      	ldr	r2, [pc, #152]	; (8000478 <GPIO_PeriClockControl+0x1b8>)
 80003de:	4293      	cmp	r3, r2
 80003e0:	d106      	bne.n	80003f0 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 80003e2:	4b22      	ldr	r3, [pc, #136]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e6:	4a21      	ldr	r2, [pc, #132]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003e8:	f023 0308 	bic.w	r3, r3, #8
 80003ec:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ee:	e035      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOE)
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	4a22      	ldr	r2, [pc, #136]	; (800047c <GPIO_PeriClockControl+0x1bc>)
 80003f4:	4293      	cmp	r3, r2
 80003f6:	d106      	bne.n	8000406 <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 80003f8:	4b1c      	ldr	r3, [pc, #112]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003fc:	4a1b      	ldr	r2, [pc, #108]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 80003fe:	f023 0310 	bic.w	r3, r3, #16
 8000402:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000404:	e02a      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOF)
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	4a1d      	ldr	r2, [pc, #116]	; (8000480 <GPIO_PeriClockControl+0x1c0>)
 800040a:	4293      	cmp	r3, r2
 800040c:	d106      	bne.n	800041c <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 800040e:	4b17      	ldr	r3, [pc, #92]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000410:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000412:	4a16      	ldr	r2, [pc, #88]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000414:	f023 0320 	bic.w	r3, r3, #32
 8000418:	6313      	str	r3, [r2, #48]	; 0x30
}
 800041a:	e01f      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOG)
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	4a19      	ldr	r2, [pc, #100]	; (8000484 <GPIO_PeriClockControl+0x1c4>)
 8000420:	4293      	cmp	r3, r2
 8000422:	d106      	bne.n	8000432 <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 8000424:	4b11      	ldr	r3, [pc, #68]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000426:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000428:	4a10      	ldr	r2, [pc, #64]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 800042a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800042e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000430:	e014      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOH)
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	4a14      	ldr	r2, [pc, #80]	; (8000488 <GPIO_PeriClockControl+0x1c8>)
 8000436:	4293      	cmp	r3, r2
 8000438:	d106      	bne.n	8000448 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 800043a:	4b0c      	ldr	r3, [pc, #48]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 800043c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800043e:	4a0b      	ldr	r2, [pc, #44]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000440:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000444:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000446:	e009      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOI)
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	4a10      	ldr	r2, [pc, #64]	; (800048c <GPIO_PeriClockControl+0x1cc>)
 800044c:	4293      	cmp	r3, r2
 800044e:	d105      	bne.n	800045c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000450:	4b06      	ldr	r3, [pc, #24]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000452:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000454:	4a05      	ldr	r2, [pc, #20]	; (800046c <GPIO_PeriClockControl+0x1ac>)
 8000456:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800045a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800045c:	bf00      	nop
 800045e:	370c      	adds	r7, #12
 8000460:	46bd      	mov	sp, r7
 8000462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000466:	4770      	bx	lr
 8000468:	40020000 	.word	0x40020000
 800046c:	40023800 	.word	0x40023800
 8000470:	40020400 	.word	0x40020400
 8000474:	40020800 	.word	0x40020800
 8000478:	40020c00 	.word	0x40020c00
 800047c:	40021000 	.word	0x40021000
 8000480:	40021400 	.word	0x40021400
 8000484:	40021800 	.word	0x40021800
 8000488:	40021c00 	.word	0x40021c00
 800048c:	40022000 	.word	0x40022000

08000490 <GPIO_Init>:
 * 		@note	:	none
 * 		@date	:	07.19.23
 *
 **********************************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000490:	b480      	push	{r7}
 8000492:	b085      	sub	sp, #20
 8000494:	af00      	add	r7, sp, #0
 8000496:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 8000498:	2300      	movs	r3, #0
 800049a:	60fb      	str	r3, [r7, #12]
	/* 1. configure the mode of GPIO pin */
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	795b      	ldrb	r3, [r3, #5]
 80004a0:	2b03      	cmp	r3, #3
 80004a2:	d820      	bhi.n	80004e6 <GPIO_Init+0x56>
	{
		/* non interrupt mode */
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	795b      	ldrb	r3, [r3, #5]
 80004a8:	461a      	mov	r2, r3
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	791b      	ldrb	r3, [r3, #4]
 80004ae:	005b      	lsls	r3, r3, #1
 80004b0:	fa02 f303 	lsl.w	r3, r2, r3
 80004b4:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	681b      	ldr	r3, [r3, #0]
 80004ba:	681a      	ldr	r2, [r3, #0]
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	791b      	ldrb	r3, [r3, #4]
 80004c0:	005b      	lsls	r3, r3, #1
 80004c2:	2103      	movs	r1, #3
 80004c4:	fa01 f303 	lsl.w	r3, r1, r3
 80004c8:	43db      	mvns	r3, r3
 80004ca:	4619      	mov	r1, r3
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	400a      	ands	r2, r1
 80004d2:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	6819      	ldr	r1, [r3, #0]
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	681b      	ldr	r3, [r3, #0]
 80004de:	68fa      	ldr	r2, [r7, #12]
 80004e0:	430a      	orrs	r2, r1
 80004e2:	601a      	str	r2, [r3, #0]
 80004e4:	e0cb      	b.n	800067e <GPIO_Init+0x1ee>
	}
	else
	{
		/* interrupt mode */
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	795b      	ldrb	r3, [r3, #5]
 80004ea:	2b04      	cmp	r3, #4
 80004ec:	d117      	bne.n	800051e <GPIO_Init+0x8e>
		{
			/* 1. enable falling edge detection */
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004ee:	4b4e      	ldr	r3, [pc, #312]	; (8000628 <GPIO_Init+0x198>)
 80004f0:	68db      	ldr	r3, [r3, #12]
 80004f2:	687a      	ldr	r2, [r7, #4]
 80004f4:	7912      	ldrb	r2, [r2, #4]
 80004f6:	4611      	mov	r1, r2
 80004f8:	2201      	movs	r2, #1
 80004fa:	408a      	lsls	r2, r1
 80004fc:	4611      	mov	r1, r2
 80004fe:	4a4a      	ldr	r2, [pc, #296]	; (8000628 <GPIO_Init+0x198>)
 8000500:	430b      	orrs	r3, r1
 8000502:	60d3      	str	r3, [r2, #12]
			/* clear RTSR */
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000504:	4b48      	ldr	r3, [pc, #288]	; (8000628 <GPIO_Init+0x198>)
 8000506:	689b      	ldr	r3, [r3, #8]
 8000508:	687a      	ldr	r2, [r7, #4]
 800050a:	7912      	ldrb	r2, [r2, #4]
 800050c:	4611      	mov	r1, r2
 800050e:	2201      	movs	r2, #1
 8000510:	408a      	lsls	r2, r1
 8000512:	43d2      	mvns	r2, r2
 8000514:	4611      	mov	r1, r2
 8000516:	4a44      	ldr	r2, [pc, #272]	; (8000628 <GPIO_Init+0x198>)
 8000518:	400b      	ands	r3, r1
 800051a:	6093      	str	r3, [r2, #8]
 800051c:	e035      	b.n	800058a <GPIO_Init+0xfa>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	795b      	ldrb	r3, [r3, #5]
 8000522:	2b05      	cmp	r3, #5
 8000524:	d117      	bne.n	8000556 <GPIO_Init+0xc6>
		{
			/* 1. enable rising edge detection */
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000526:	4b40      	ldr	r3, [pc, #256]	; (8000628 <GPIO_Init+0x198>)
 8000528:	689b      	ldr	r3, [r3, #8]
 800052a:	687a      	ldr	r2, [r7, #4]
 800052c:	7912      	ldrb	r2, [r2, #4]
 800052e:	4611      	mov	r1, r2
 8000530:	2201      	movs	r2, #1
 8000532:	408a      	lsls	r2, r1
 8000534:	4611      	mov	r1, r2
 8000536:	4a3c      	ldr	r2, [pc, #240]	; (8000628 <GPIO_Init+0x198>)
 8000538:	430b      	orrs	r3, r1
 800053a:	6093      	str	r3, [r2, #8]
			/* clear FTSR */
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800053c:	4b3a      	ldr	r3, [pc, #232]	; (8000628 <GPIO_Init+0x198>)
 800053e:	68db      	ldr	r3, [r3, #12]
 8000540:	687a      	ldr	r2, [r7, #4]
 8000542:	7912      	ldrb	r2, [r2, #4]
 8000544:	4611      	mov	r1, r2
 8000546:	2201      	movs	r2, #1
 8000548:	408a      	lsls	r2, r1
 800054a:	43d2      	mvns	r2, r2
 800054c:	4611      	mov	r1, r2
 800054e:	4a36      	ldr	r2, [pc, #216]	; (8000628 <GPIO_Init+0x198>)
 8000550:	400b      	ands	r3, r1
 8000552:	60d3      	str	r3, [r2, #12]
 8000554:	e019      	b.n	800058a <GPIO_Init+0xfa>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	795b      	ldrb	r3, [r3, #5]
 800055a:	2b06      	cmp	r3, #6
 800055c:	d115      	bne.n	800058a <GPIO_Init+0xfa>
		{
			/* 1. enable both falling edge and rising edge detection */
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800055e:	4b32      	ldr	r3, [pc, #200]	; (8000628 <GPIO_Init+0x198>)
 8000560:	68db      	ldr	r3, [r3, #12]
 8000562:	687a      	ldr	r2, [r7, #4]
 8000564:	7912      	ldrb	r2, [r2, #4]
 8000566:	4611      	mov	r1, r2
 8000568:	2201      	movs	r2, #1
 800056a:	408a      	lsls	r2, r1
 800056c:	4611      	mov	r1, r2
 800056e:	4a2e      	ldr	r2, [pc, #184]	; (8000628 <GPIO_Init+0x198>)
 8000570:	430b      	orrs	r3, r1
 8000572:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000574:	4b2c      	ldr	r3, [pc, #176]	; (8000628 <GPIO_Init+0x198>)
 8000576:	689b      	ldr	r3, [r3, #8]
 8000578:	687a      	ldr	r2, [r7, #4]
 800057a:	7912      	ldrb	r2, [r2, #4]
 800057c:	4611      	mov	r1, r2
 800057e:	2201      	movs	r2, #1
 8000580:	408a      	lsls	r2, r1
 8000582:	4611      	mov	r1, r2
 8000584:	4a28      	ldr	r2, [pc, #160]	; (8000628 <GPIO_Init+0x198>)
 8000586:	430b      	orrs	r3, r1
 8000588:	6093      	str	r3, [r2, #8]
		}

		/* 2. configure the GPIO port selection in SYSCFG_EXTICR */
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	791b      	ldrb	r3, [r3, #4]
 800058e:	089b      	lsrs	r3, r3, #2
 8000590:	72fb      	strb	r3, [r7, #11]
		uint8_t temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4) * 4;
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	791b      	ldrb	r3, [r3, #4]
 8000596:	f003 0303 	and.w	r3, r3, #3
 800059a:	b2db      	uxtb	r3, r3
 800059c:	009b      	lsls	r3, r3, #2
 800059e:	72bb      	strb	r3, [r7, #10]
		SYSCFG_PCLK_EN();
 80005a0:	4b22      	ldr	r3, [pc, #136]	; (800062c <GPIO_Init+0x19c>)
 80005a2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80005a4:	4a21      	ldr	r2, [pc, #132]	; (800062c <GPIO_Init+0x19c>)
 80005a6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80005aa:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] |= (GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx) << temp2);
 80005ac:	4a20      	ldr	r2, [pc, #128]	; (8000630 <GPIO_Init+0x1a0>)
 80005ae:	7afb      	ldrb	r3, [r7, #11]
 80005b0:	3302      	adds	r3, #2
 80005b2:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	681b      	ldr	r3, [r3, #0]
 80005ba:	491e      	ldr	r1, [pc, #120]	; (8000634 <GPIO_Init+0x1a4>)
 80005bc:	428b      	cmp	r3, r1
 80005be:	d049      	beq.n	8000654 <GPIO_Init+0x1c4>
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	681b      	ldr	r3, [r3, #0]
 80005c4:	491c      	ldr	r1, [pc, #112]	; (8000638 <GPIO_Init+0x1a8>)
 80005c6:	428b      	cmp	r3, r1
 80005c8:	d02b      	beq.n	8000622 <GPIO_Init+0x192>
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	681b      	ldr	r3, [r3, #0]
 80005ce:	491b      	ldr	r1, [pc, #108]	; (800063c <GPIO_Init+0x1ac>)
 80005d0:	428b      	cmp	r3, r1
 80005d2:	d024      	beq.n	800061e <GPIO_Init+0x18e>
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	681b      	ldr	r3, [r3, #0]
 80005d8:	4919      	ldr	r1, [pc, #100]	; (8000640 <GPIO_Init+0x1b0>)
 80005da:	428b      	cmp	r3, r1
 80005dc:	d01d      	beq.n	800061a <GPIO_Init+0x18a>
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	4918      	ldr	r1, [pc, #96]	; (8000644 <GPIO_Init+0x1b4>)
 80005e4:	428b      	cmp	r3, r1
 80005e6:	d016      	beq.n	8000616 <GPIO_Init+0x186>
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	681b      	ldr	r3, [r3, #0]
 80005ec:	4916      	ldr	r1, [pc, #88]	; (8000648 <GPIO_Init+0x1b8>)
 80005ee:	428b      	cmp	r3, r1
 80005f0:	d00f      	beq.n	8000612 <GPIO_Init+0x182>
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	681b      	ldr	r3, [r3, #0]
 80005f6:	4915      	ldr	r1, [pc, #84]	; (800064c <GPIO_Init+0x1bc>)
 80005f8:	428b      	cmp	r3, r1
 80005fa:	d008      	beq.n	800060e <GPIO_Init+0x17e>
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	681b      	ldr	r3, [r3, #0]
 8000600:	4913      	ldr	r1, [pc, #76]	; (8000650 <GPIO_Init+0x1c0>)
 8000602:	428b      	cmp	r3, r1
 8000604:	d101      	bne.n	800060a <GPIO_Init+0x17a>
 8000606:	2307      	movs	r3, #7
 8000608:	e025      	b.n	8000656 <GPIO_Init+0x1c6>
 800060a:	2300      	movs	r3, #0
 800060c:	e023      	b.n	8000656 <GPIO_Init+0x1c6>
 800060e:	2306      	movs	r3, #6
 8000610:	e021      	b.n	8000656 <GPIO_Init+0x1c6>
 8000612:	2305      	movs	r3, #5
 8000614:	e01f      	b.n	8000656 <GPIO_Init+0x1c6>
 8000616:	2304      	movs	r3, #4
 8000618:	e01d      	b.n	8000656 <GPIO_Init+0x1c6>
 800061a:	2303      	movs	r3, #3
 800061c:	e01b      	b.n	8000656 <GPIO_Init+0x1c6>
 800061e:	2302      	movs	r3, #2
 8000620:	e019      	b.n	8000656 <GPIO_Init+0x1c6>
 8000622:	2301      	movs	r3, #1
 8000624:	e017      	b.n	8000656 <GPIO_Init+0x1c6>
 8000626:	bf00      	nop
 8000628:	40013c00 	.word	0x40013c00
 800062c:	40023800 	.word	0x40023800
 8000630:	40013800 	.word	0x40013800
 8000634:	40020000 	.word	0x40020000
 8000638:	40020400 	.word	0x40020400
 800063c:	40020800 	.word	0x40020800
 8000640:	40020c00 	.word	0x40020c00
 8000644:	40021000 	.word	0x40021000
 8000648:	40021400 	.word	0x40021400
 800064c:	40021800 	.word	0x40021800
 8000650:	40021c00 	.word	0x40021c00
 8000654:	2300      	movs	r3, #0
 8000656:	7ab9      	ldrb	r1, [r7, #10]
 8000658:	408b      	lsls	r3, r1
 800065a:	4618      	mov	r0, r3
 800065c:	4965      	ldr	r1, [pc, #404]	; (80007f4 <GPIO_Init+0x364>)
 800065e:	7afb      	ldrb	r3, [r7, #11]
 8000660:	4302      	orrs	r2, r0
 8000662:	3302      	adds	r3, #2
 8000664:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		/* 3. enable the EXTI interrupt delivery using IMR */
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000668:	4b63      	ldr	r3, [pc, #396]	; (80007f8 <GPIO_Init+0x368>)
 800066a:	681b      	ldr	r3, [r3, #0]
 800066c:	687a      	ldr	r2, [r7, #4]
 800066e:	7912      	ldrb	r2, [r2, #4]
 8000670:	4611      	mov	r1, r2
 8000672:	2201      	movs	r2, #1
 8000674:	408a      	lsls	r2, r1
 8000676:	4611      	mov	r1, r2
 8000678:	4a5f      	ldr	r2, [pc, #380]	; (80007f8 <GPIO_Init+0x368>)
 800067a:	430b      	orrs	r3, r1
 800067c:	6013      	str	r3, [r2, #0]
	}
	temp = 0;
 800067e:	2300      	movs	r3, #0
 8000680:	60fb      	str	r3, [r7, #12]

	/* 2. configure the speed of GPIO pin */
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	799b      	ldrb	r3, [r3, #6]
 8000686:	461a      	mov	r2, r3
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	791b      	ldrb	r3, [r3, #4]
 800068c:	005b      	lsls	r3, r3, #1
 800068e:	fa02 f303 	lsl.w	r3, r2, r3
 8000692:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	689a      	ldr	r2, [r3, #8]
 800069a:	687b      	ldr	r3, [r7, #4]
 800069c:	791b      	ldrb	r3, [r3, #4]
 800069e:	005b      	lsls	r3, r3, #1
 80006a0:	2103      	movs	r1, #3
 80006a2:	fa01 f303 	lsl.w	r3, r1, r3
 80006a6:	43db      	mvns	r3, r3
 80006a8:	4619      	mov	r1, r3
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	681b      	ldr	r3, [r3, #0]
 80006ae:	400a      	ands	r2, r1
 80006b0:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006b2:	687b      	ldr	r3, [r7, #4]
 80006b4:	681b      	ldr	r3, [r3, #0]
 80006b6:	6899      	ldr	r1, [r3, #8]
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	68fa      	ldr	r2, [r7, #12]
 80006be:	430a      	orrs	r2, r1
 80006c0:	609a      	str	r2, [r3, #8]
	temp = 0;
 80006c2:	2300      	movs	r3, #0
 80006c4:	60fb      	str	r3, [r7, #12]

	/* 3. configure the pull up/down state */
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	79db      	ldrb	r3, [r3, #7]
 80006ca:	461a      	mov	r2, r3
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	791b      	ldrb	r3, [r3, #4]
 80006d0:	005b      	lsls	r3, r3, #1
 80006d2:	fa02 f303 	lsl.w	r3, r2, r3
 80006d6:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006d8:	687b      	ldr	r3, [r7, #4]
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	68da      	ldr	r2, [r3, #12]
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	791b      	ldrb	r3, [r3, #4]
 80006e2:	005b      	lsls	r3, r3, #1
 80006e4:	2103      	movs	r1, #3
 80006e6:	fa01 f303 	lsl.w	r3, r1, r3
 80006ea:	43db      	mvns	r3, r3
 80006ec:	4619      	mov	r1, r3
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	681b      	ldr	r3, [r3, #0]
 80006f2:	400a      	ands	r2, r1
 80006f4:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	681b      	ldr	r3, [r3, #0]
 80006fa:	68d9      	ldr	r1, [r3, #12]
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	68fa      	ldr	r2, [r7, #12]
 8000702:	430a      	orrs	r2, r1
 8000704:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000706:	2300      	movs	r3, #0
 8000708:	60fb      	str	r3, [r7, #12]

	/* 4. configure the output type */
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	7a1b      	ldrb	r3, [r3, #8]
 800070e:	461a      	mov	r2, r3
 8000710:	687b      	ldr	r3, [r7, #4]
 8000712:	791b      	ldrb	r3, [r3, #4]
 8000714:	fa02 f303 	lsl.w	r3, r2, r3
 8000718:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	681b      	ldr	r3, [r3, #0]
 800071e:	685a      	ldr	r2, [r3, #4]
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	791b      	ldrb	r3, [r3, #4]
 8000724:	4619      	mov	r1, r3
 8000726:	2301      	movs	r3, #1
 8000728:	408b      	lsls	r3, r1
 800072a:	43db      	mvns	r3, r3
 800072c:	4619      	mov	r1, r3
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	681b      	ldr	r3, [r3, #0]
 8000732:	400a      	ands	r2, r1
 8000734:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	681b      	ldr	r3, [r3, #0]
 800073a:	6859      	ldr	r1, [r3, #4]
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	681b      	ldr	r3, [r3, #0]
 8000740:	68fa      	ldr	r2, [r7, #12]
 8000742:	430a      	orrs	r2, r1
 8000744:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000746:	2300      	movs	r3, #0
 8000748:	60fb      	str	r3, [r7, #12]

	/* 5. configure the alternate functionality */
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	795b      	ldrb	r3, [r3, #5]
 800074e:	2b02      	cmp	r3, #2
 8000750:	d149      	bne.n	80007e6 <GPIO_Init+0x356>
	{
		if((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) < GPIO_PIN_NO_8)
 8000752:	687b      	ldr	r3, [r7, #4]
 8000754:	791b      	ldrb	r3, [r3, #4]
 8000756:	2b07      	cmp	r3, #7
 8000758:	d81f      	bhi.n	800079a <GPIO_Init+0x30a>
		{
			temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	7a5b      	ldrb	r3, [r3, #9]
 800075e:	461a      	mov	r2, r3
 8000760:	687b      	ldr	r3, [r7, #4]
 8000762:	791b      	ldrb	r3, [r3, #4]
 8000764:	009b      	lsls	r3, r3, #2
 8000766:	fa02 f303 	lsl.w	r3, r2, r3
 800076a:	60fb      	str	r3, [r7, #12]
			pGPIOHandle->pGPIOx->AFRL &= ~(0xF<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	6a1a      	ldr	r2, [r3, #32]
 8000772:	687b      	ldr	r3, [r7, #4]
 8000774:	791b      	ldrb	r3, [r3, #4]
 8000776:	4619      	mov	r1, r3
 8000778:	230f      	movs	r3, #15
 800077a:	408b      	lsls	r3, r1
 800077c:	43db      	mvns	r3, r3
 800077e:	4619      	mov	r1, r3
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	681b      	ldr	r3, [r3, #0]
 8000784:	400a      	ands	r2, r1
 8000786:	621a      	str	r2, [r3, #32]
			pGPIOHandle->pGPIOx->AFRL |= temp;
 8000788:	687b      	ldr	r3, [r7, #4]
 800078a:	681b      	ldr	r3, [r3, #0]
 800078c:	6a19      	ldr	r1, [r3, #32]
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	681b      	ldr	r3, [r3, #0]
 8000792:	68fa      	ldr	r2, [r7, #12]
 8000794:	430a      	orrs	r2, r1
 8000796:	621a      	str	r2, [r3, #32]
 8000798:	e023      	b.n	80007e2 <GPIO_Init+0x352>
		}
		else
		{
			temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % GPIO_PIN_NO_8)));
 800079a:	687b      	ldr	r3, [r7, #4]
 800079c:	7a5b      	ldrb	r3, [r3, #9]
 800079e:	461a      	mov	r2, r3
 80007a0:	687b      	ldr	r3, [r7, #4]
 80007a2:	791b      	ldrb	r3, [r3, #4]
 80007a4:	f003 0307 	and.w	r3, r3, #7
 80007a8:	009b      	lsls	r3, r3, #2
 80007aa:	fa02 f303 	lsl.w	r3, r2, r3
 80007ae:	60fb      	str	r3, [r7, #12]
			pGPIOHandle->pGPIOx->AFRH &= ~(0xF << (4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % GPIO_PIN_NO_8)));
 80007b0:	687b      	ldr	r3, [r7, #4]
 80007b2:	681b      	ldr	r3, [r3, #0]
 80007b4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80007b6:	687b      	ldr	r3, [r7, #4]
 80007b8:	791b      	ldrb	r3, [r3, #4]
 80007ba:	f003 0307 	and.w	r3, r3, #7
 80007be:	009b      	lsls	r3, r3, #2
 80007c0:	210f      	movs	r1, #15
 80007c2:	fa01 f303 	lsl.w	r3, r1, r3
 80007c6:	43db      	mvns	r3, r3
 80007c8:	4619      	mov	r1, r3
 80007ca:	687b      	ldr	r3, [r7, #4]
 80007cc:	681b      	ldr	r3, [r3, #0]
 80007ce:	400a      	ands	r2, r1
 80007d0:	625a      	str	r2, [r3, #36]	; 0x24
			pGPIOHandle->pGPIOx->AFRH |= temp;
 80007d2:	687b      	ldr	r3, [r7, #4]
 80007d4:	681b      	ldr	r3, [r3, #0]
 80007d6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	681b      	ldr	r3, [r3, #0]
 80007dc:	68fa      	ldr	r2, [r7, #12]
 80007de:	430a      	orrs	r2, r1
 80007e0:	625a      	str	r2, [r3, #36]	; 0x24
		}
		temp = 0;
 80007e2:	2300      	movs	r3, #0
 80007e4:	60fb      	str	r3, [r7, #12]
	}
}
 80007e6:	bf00      	nop
 80007e8:	3714      	adds	r7, #20
 80007ea:	46bd      	mov	sp, r7
 80007ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007f0:	4770      	bx	lr
 80007f2:	bf00      	nop
 80007f4:	40013800 	.word	0x40013800
 80007f8:	40013c00 	.word	0x40013c00

080007fc <GPIO_ReadFromInputPin>:
 * 		@note	:	none
 * 		@date	:	07.19.23
 *
 **********************************************************************/
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80007fc:	b480      	push	{r7}
 80007fe:	b085      	sub	sp, #20
 8000800:	af00      	add	r7, sp, #0
 8000802:	6078      	str	r0, [r7, #4]
 8000804:	460b      	mov	r3, r1
 8000806:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	/* correction may be required */
	value = (uint8_t)(pGPIOx->IDR & (1 << PinNumber));
 8000808:	687b      	ldr	r3, [r7, #4]
 800080a:	691b      	ldr	r3, [r3, #16]
 800080c:	b2da      	uxtb	r2, r3
 800080e:	78fb      	ldrb	r3, [r7, #3]
 8000810:	2101      	movs	r1, #1
 8000812:	fa01 f303 	lsl.w	r3, r1, r3
 8000816:	b2db      	uxtb	r3, r3
 8000818:	4013      	ands	r3, r2
 800081a:	73fb      	strb	r3, [r7, #15]
	return value;
 800081c:	7bfb      	ldrb	r3, [r7, #15]
}
 800081e:	4618      	mov	r0, r3
 8000820:	3714      	adds	r7, #20
 8000822:	46bd      	mov	sp, r7
 8000824:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000828:	4770      	bx	lr

0800082a <GPIO_WriteToOutputPin>:
 * 		@note	:	none
 * 		@date	:	07.19.23
 *
 **********************************************************************/
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t EnorDi)
{
 800082a:	b480      	push	{r7}
 800082c:	b083      	sub	sp, #12
 800082e:	af00      	add	r7, sp, #0
 8000830:	6078      	str	r0, [r7, #4]
 8000832:	460b      	mov	r3, r1
 8000834:	70fb      	strb	r3, [r7, #3]
 8000836:	4613      	mov	r3, r2
 8000838:	70bb      	strb	r3, [r7, #2]
	if(EnorDi)
 800083a:	78bb      	ldrb	r3, [r7, #2]
 800083c:	2b00      	cmp	r3, #0
 800083e:	d009      	beq.n	8000854 <GPIO_WriteToOutputPin+0x2a>
	{
		/* write 1 to the output data register */
		pGPIOx->ODR |= (1 << PinNumber);
 8000840:	687b      	ldr	r3, [r7, #4]
 8000842:	695b      	ldr	r3, [r3, #20]
 8000844:	78fa      	ldrb	r2, [r7, #3]
 8000846:	2101      	movs	r1, #1
 8000848:	fa01 f202 	lsl.w	r2, r1, r2
 800084c:	431a      	orrs	r2, r3
 800084e:	687b      	ldr	r3, [r7, #4]
 8000850:	615a      	str	r2, [r3, #20]
	else
	{
		/* clear the output data register */
		pGPIOx->ODR &= ~(1 << PinNumber);
	}
}
 8000852:	e009      	b.n	8000868 <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~(1 << PinNumber);
 8000854:	687b      	ldr	r3, [r7, #4]
 8000856:	695b      	ldr	r3, [r3, #20]
 8000858:	78fa      	ldrb	r2, [r7, #3]
 800085a:	2101      	movs	r1, #1
 800085c:	fa01 f202 	lsl.w	r2, r1, r2
 8000860:	43d2      	mvns	r2, r2
 8000862:	401a      	ands	r2, r3
 8000864:	687b      	ldr	r3, [r7, #4]
 8000866:	615a      	str	r2, [r3, #20]
}
 8000868:	bf00      	nop
 800086a:	370c      	adds	r7, #12
 800086c:	46bd      	mov	sp, r7
 800086e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000872:	4770      	bx	lr

08000874 <__libc_init_array>:
 8000874:	b570      	push	{r4, r5, r6, lr}
 8000876:	4d0d      	ldr	r5, [pc, #52]	; (80008ac <__libc_init_array+0x38>)
 8000878:	4c0d      	ldr	r4, [pc, #52]	; (80008b0 <__libc_init_array+0x3c>)
 800087a:	1b64      	subs	r4, r4, r5
 800087c:	10a4      	asrs	r4, r4, #2
 800087e:	2600      	movs	r6, #0
 8000880:	42a6      	cmp	r6, r4
 8000882:	d109      	bne.n	8000898 <__libc_init_array+0x24>
 8000884:	4d0b      	ldr	r5, [pc, #44]	; (80008b4 <__libc_init_array+0x40>)
 8000886:	4c0c      	ldr	r4, [pc, #48]	; (80008b8 <__libc_init_array+0x44>)
 8000888:	f000 f818 	bl	80008bc <_init>
 800088c:	1b64      	subs	r4, r4, r5
 800088e:	10a4      	asrs	r4, r4, #2
 8000890:	2600      	movs	r6, #0
 8000892:	42a6      	cmp	r6, r4
 8000894:	d105      	bne.n	80008a2 <__libc_init_array+0x2e>
 8000896:	bd70      	pop	{r4, r5, r6, pc}
 8000898:	f855 3b04 	ldr.w	r3, [r5], #4
 800089c:	4798      	blx	r3
 800089e:	3601      	adds	r6, #1
 80008a0:	e7ee      	b.n	8000880 <__libc_init_array+0xc>
 80008a2:	f855 3b04 	ldr.w	r3, [r5], #4
 80008a6:	4798      	blx	r3
 80008a8:	3601      	adds	r6, #1
 80008aa:	e7f2      	b.n	8000892 <__libc_init_array+0x1e>
 80008ac:	080008d4 	.word	0x080008d4
 80008b0:	080008d4 	.word	0x080008d4
 80008b4:	080008d4 	.word	0x080008d4
 80008b8:	080008d8 	.word	0x080008d8

080008bc <_init>:
 80008bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008be:	bf00      	nop
 80008c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008c2:	bc08      	pop	{r3}
 80008c4:	469e      	mov	lr, r3
 80008c6:	4770      	bx	lr

080008c8 <_fini>:
 80008c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ca:	bf00      	nop
 80008cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008ce:	bc08      	pop	{r3}
 80008d0:	469e      	mov	lr, r3
 80008d2:	4770      	bx	lr
